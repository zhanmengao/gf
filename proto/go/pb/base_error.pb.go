// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: base_error.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type BASE_ERROR_CODE int32

const (
	//系统错误
	ERR_CODE_NONE BASE_ERROR_CODE = 0
	//SERVER DECODE
	ERR_CODE_SERVER_DECODE BASE_ERROR_CODE = 10
	//SERVER ENCODE
	ERR_CODE_SERVER_ENCODE BASE_ERROR_CODE = 20
	//SERVICE NOT_EXISTS
	ERR_CODE_SERVER_SERVICE_NOT_EXISTS BASE_ERROR_CODE = 30
	//SERVER NETWORK
	ERR_CODE_SERVER_NETWORK BASE_ERROR_CODE = 40
	//SERVER DATABASE
	ERR_CODE_SERVER_DATABASE BASE_ERROR_CODE = 41
	//SERVER_AUTH
	ERR_CODE_SERVER_AUTH BASE_ERROR_CODE = 50
	//SERVER_BAD_PARAM
	ERR_CODE_SERVER_BAD_PARAM BASE_ERROR_CODE = 60
	//SERVER_BUSY
	ERR_CODE_SERVER_BUSY BASE_ERROR_CODE = 61
	//CMD_NOT_REGISTER
	ERR_CODE_SERVER_CMD_NOT_REGISTER BASE_ERROR_CODE = 70
	//INTERNAL_UNKNOWN
	ERR_CODE_SERVER_INTERNAL_UNKNOWN BASE_ERROR_CODE = 99
	//DATA_NOT_FOUND
	ERR_CODE_DATA_NOT_FOUND BASE_ERROR_CODE = 404
	//CONFIG_NOT_FOUND
	ERR_CODE_CONFIG_NOT_FOUND BASE_ERROR_CODE = 101
	//CONFIG_INCORRECT
	ERR_CODE_CONFIG_INCORRECT BASE_ERROR_CODE = 102
	//ErrFreqLimit 频率限制错误
	ERR_CODE_FREQ_LIMIT BASE_ERROR_CODE = 1001
	//ErrConcurrency 并发错误
	ERR_CODE_CONCURRENCY BASE_ERROR_CODE = 1002
	//ErrSrvStopped 停服
	ERR_CODE_SRV_STOPPED BASE_ERROR_CODE = 1003
	//ErrUserBanned 被封号
	ERR_CODE_USER_BANNED BASE_ERROR_CODE = 1004
)

var BASE_ERROR_CODE_name = map[int32]string{
	0:    "ERR_CODE_NONE",
	10:   "ERR_CODE_SERVER_DECODE",
	20:   "ERR_CODE_SERVER_ENCODE",
	30:   "ERR_CODE_SERVER_SERVICE_NOT_EXISTS",
	40:   "ERR_CODE_SERVER_NETWORK",
	41:   "ERR_CODE_SERVER_DATABASE",
	50:   "ERR_CODE_SERVER_AUTH",
	60:   "ERR_CODE_SERVER_BAD_PARAM",
	61:   "ERR_CODE_SERVER_BUSY",
	70:   "ERR_CODE_SERVER_CMD_NOT_REGISTER",
	99:   "ERR_CODE_SERVER_INTERNAL_UNKNOWN",
	404:  "ERR_CODE_DATA_NOT_FOUND",
	101:  "ERR_CODE_CONFIG_NOT_FOUND",
	102:  "ERR_CODE_CONFIG_INCORRECT",
	1001: "ERR_CODE_FREQ_LIMIT",
	1002: "ERR_CODE_CONCURRENCY",
	1003: "ERR_CODE_SRV_STOPPED",
	1004: "ERR_CODE_USER_BANNED",
}

var BASE_ERROR_CODE_value = map[string]int32{
	"ERR_CODE_NONE":                      0,
	"ERR_CODE_SERVER_DECODE":             10,
	"ERR_CODE_SERVER_ENCODE":             20,
	"ERR_CODE_SERVER_SERVICE_NOT_EXISTS": 30,
	"ERR_CODE_SERVER_NETWORK":            40,
	"ERR_CODE_SERVER_DATABASE":           41,
	"ERR_CODE_SERVER_AUTH":               50,
	"ERR_CODE_SERVER_BAD_PARAM":          60,
	"ERR_CODE_SERVER_BUSY":               61,
	"ERR_CODE_SERVER_CMD_NOT_REGISTER":   70,
	"ERR_CODE_SERVER_INTERNAL_UNKNOWN":   99,
	"ERR_CODE_DATA_NOT_FOUND":            404,
	"ERR_CODE_CONFIG_NOT_FOUND":          101,
	"ERR_CODE_CONFIG_INCORRECT":          102,
	"ERR_CODE_FREQ_LIMIT":                1001,
	"ERR_CODE_CONCURRENCY":               1002,
	"ERR_CODE_SRV_STOPPED":               1003,
	"ERR_CODE_USER_BANNED":               1004,
}

func (BASE_ERROR_CODE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dd8c536ea65c2215, []int{0}
}

func init() {
	proto.RegisterEnum("forevernine.base.proto.BASE_ERROR_CODE", BASE_ERROR_CODE_name, BASE_ERROR_CODE_value)
}

func init() { proto.RegisterFile("base_error.proto", fileDescriptor_dd8c536ea65c2215) }

var fileDescriptor_dd8c536ea65c2215 = []byte{
	// 399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xcf, 0x6a, 0x14, 0x41,
	0x10, 0xc6, 0x77, 0x51, 0x0c, 0x34, 0x88, 0x65, 0x1b, 0xe2, 0x46, 0xe3, 0x20, 0x22, 0x12, 0x3d,
	0x64, 0x41, 0xaf, 0x7a, 0xe8, 0xe9, 0xa9, 0x89, 0x4d, 0xb2, 0xd5, 0x6b, 0x75, 0x4f, 0x62, 0xbc,
	0x34, 0xd9, 0x38, 0x91, 0x80, 0xc9, 0x2c, 0x63, 0xf0, 0x49, 0x7c, 0x05, 0xdf, 0xc5, 0x63, 0x1e,
	0x41, 0xe7, 0xe4, 0xbf, 0x83, 0x8f, 0x20, 0x33, 0x81, 0x65, 0x76, 0x32, 0xa7, 0xee, 0xaa, 0x5f,
	0x75, 0xf5, 0x57, 0xc5, 0x27, 0x60, 0x76, 0xf8, 0x29, 0x0f, 0x79, 0x59, 0x16, 0xe5, 0xd6, 0xbc,
	0x2c, 0xce, 0x0b, 0xb9, 0x76, 0x5c, 0x94, 0xf9, 0xe7, 0xbc, 0x3c, 0x3b, 0x39, 0xcb, 0xb7, 0x6a,
	0x7a, 0x99, 0x7f, 0xf6, 0xf5, 0xba, 0xb8, 0x15, 0x2b, 0x87, 0x01, 0x99, 0x2d, 0x07, 0x6d, 0x13,
	0x94, 0xb7, 0xc5, 0x4d, 0xe4, 0xcb, 0x7b, 0x20, 0x4b, 0x08, 0x03, 0x79, 0x4f, 0xac, 0x2d, 0x52,
	0x0e, 0x79, 0x0f, 0x39, 0x24, 0x58, 0x47, 0x20, 0xfa, 0x18, 0x52, 0xc3, 0x56, 0xe5, 0x13, 0xf1,
	0xa8, 0xcb, 0xea, 0xc3, 0xe8, 0xba, 0xb3, 0x0f, 0xf8, 0xd6, 0x38, 0xef, 0x20, 0x92, 0xf7, 0xc5,
	0xdd, 0x6e, 0x1d, 0xa1, 0xdf, 0xb7, 0xbc, 0x03, 0x9b, 0x72, 0x43, 0x8c, 0xae, 0x7c, 0xae, 0xbc,
	0xaa, 0x65, 0xc3, 0x53, 0x39, 0x12, 0xab, 0x5d, 0xaa, 0x32, 0xff, 0x1a, 0x9e, 0xcb, 0x07, 0x62,
	0xbd, 0x4b, 0x62, 0x95, 0x84, 0xa9, 0x62, 0x35, 0x81, 0x97, 0x7d, 0x0f, 0xe3, 0xcc, 0x1d, 0xc0,
	0x2b, 0xf9, 0x58, 0x3c, 0xec, 0x12, 0x3d, 0x49, 0x1a, 0xc5, 0x8c, 0xdb, 0xc6, 0x79, 0x64, 0x48,
	0xfb, 0xaa, 0x0c, 0x79, 0x64, 0x52, 0xbb, 0x21, 0xa3, 0x1d, 0xb2, 0xfb, 0x04, 0x47, 0x72, 0xa3,
	0x35, 0x59, 0xad, 0xba, 0xe9, 0x92, 0xda, 0x8c, 0x12, 0xf8, 0x72, 0x6d, 0x49, 0xa2, 0xb6, 0x94,
	0x9a, 0xed, 0x16, 0xcf, 0xfb, 0xb0, 0x21, 0x6d, 0x99, 0x51, 0x7b, 0x38, 0x96, 0x23, 0x71, 0x67,
	0x81, 0x53, 0xc6, 0x37, 0x61, 0xd7, 0x4c, 0x8c, 0x87, 0x5f, 0x2b, 0x72, 0xbd, 0x35, 0x9b, 0xb6,
	0xa4, 0x33, 0x66, 0x24, 0x7d, 0x00, 0xbf, 0x97, 0x91, 0xe3, 0xbd, 0xe0, 0xbc, 0x9d, 0x4e, 0x31,
	0x81, 0x3f, 0xcb, 0x28, 0x73, 0xcd, 0xba, 0x88, 0x30, 0x81, 0xbf, 0x2b, 0x71, 0x7c, 0xf1, 0x23,
	0x1a, 0x7c, 0xab, 0xa2, 0xe1, 0x45, 0x15, 0x0d, 0xbf, 0x57, 0xd1, 0xf0, 0x67, 0x15, 0x0d, 0xfe,
	0x55, 0xd1, 0xf0, 0xdd, 0x66, 0xdb, 0x59, 0x47, 0xc5, 0xe9, 0xf8, 0xf4, 0xe4, 0xfd, 0xfc, 0xe3,
	0xe1, 0xf9, 0xb8, 0xf1, 0x60, 0xe3, 0xb2, 0xf1, 0x87, 0x62, 0x3c, 0x9f, 0xcd, 0x6e, 0x34, 0xc1,
	0x8b, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x10, 0x22, 0xff, 0xbc, 0x9e, 0x02, 0x00, 0x00,
}

func (x BASE_ERROR_CODE) String() string {
	s, ok := BASE_ERROR_CODE_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
