// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: base_enum.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PATCH_UPDATE_TYPE int32

const (
	PATCH_UPDATE_LAST_LOGIN   PATCH_UPDATE_TYPE = 0
	PATCH_UPDATE_NOTIFY_LOGIN PATCH_UPDATE_TYPE = 1
	PATCH_UPDATE_MUST_LOGIN   PATCH_UPDATE_TYPE = 2
)

var PATCH_UPDATE_TYPE_name = map[int32]string{
	0: "PATCH_UPDATE_LAST_LOGIN",
	1: "PATCH_UPDATE_NOTIFY_LOGIN",
	2: "PATCH_UPDATE_MUST_LOGIN",
}

var PATCH_UPDATE_TYPE_value = map[string]int32{
	"PATCH_UPDATE_LAST_LOGIN":   0,
	"PATCH_UPDATE_NOTIFY_LOGIN": 1,
	"PATCH_UPDATE_MUST_LOGIN":   2,
}

func (PATCH_UPDATE_TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_69024c761b02dd12, []int{0}
}

type PACKET_HEAD_OPT_OFFSET int32

const (
	PACKET_HEAD_OPT_SAFE_NETWORK_OPEN PACKET_HEAD_OPT_OFFSET = 0
)

var PACKET_HEAD_OPT_OFFSET_name = map[int32]string{
	0: "PACKET_HEAD_OPT_SAFE_NETWORK_OPEN",
}

var PACKET_HEAD_OPT_OFFSET_value = map[string]int32{
	"PACKET_HEAD_OPT_SAFE_NETWORK_OPEN": 0,
}

func (PACKET_HEAD_OPT_OFFSET) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_69024c761b02dd12, []int{1}
}

type BASE_CMD int32

const (
	BASE_CMD_INIT          BASE_CMD = 0
	BASE_CMD_RECONNECT_REQ BASE_CMD = 100
	BASE_CMD_RECONNECT_RSP BASE_CMD = 101
	BASE_CMD_END           BASE_CMD = 9999
)

var BASE_CMD_name = map[int32]string{
	0:    "BASE_CMD_INIT",
	100:  "BASE_CMD_RECONNECT_REQ",
	101:  "BASE_CMD_RECONNECT_RSP",
	9999: "BASE_CMD_END",
}

var BASE_CMD_value = map[string]int32{
	"BASE_CMD_INIT":          0,
	"BASE_CMD_RECONNECT_REQ": 100,
	"BASE_CMD_RECONNECT_RSP": 101,
	"BASE_CMD_END":           9999,
}

func (BASE_CMD) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_69024c761b02dd12, []int{2}
}

func init() {
	proto.RegisterEnum("forevernine.base.proto.PATCH_UPDATE_TYPE", PATCH_UPDATE_TYPE_name, PATCH_UPDATE_TYPE_value)
	proto.RegisterEnum("forevernine.base.proto.PACKET_HEAD_OPT_OFFSET", PACKET_HEAD_OPT_OFFSET_name, PACKET_HEAD_OPT_OFFSET_value)
	proto.RegisterEnum("forevernine.base.proto.BASE_CMD", BASE_CMD_name, BASE_CMD_value)
}

func init() { proto.RegisterFile("base_enum.proto", fileDescriptor_69024c761b02dd12) }

var fileDescriptor_69024c761b02dd12 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xd0, 0x41, 0x4a, 0xc3, 0x40,
	0x14, 0x06, 0xe0, 0xc4, 0x85, 0xc8, 0xa0, 0x38, 0x9d, 0x45, 0x45, 0xc5, 0x01, 0x17, 0x82, 0x74,
	0xd1, 0x2c, 0x3c, 0x80, 0x4c, 0x93, 0x17, 0x1b, 0xda, 0xce, 0x8c, 0xcd, 0x14, 0xa9, 0x9b, 0x47,
	0x6b, 0x47, 0x2d, 0xb4, 0x49, 0x88, 0xd5, 0x6b, 0x78, 0x2d, 0x97, 0x3d, 0x82, 0x66, 0xe5, 0xd2,
	0x23, 0x88, 0x51, 0x83, 0x55, 0xdc, 0xbd, 0xf7, 0x7f, 0xfc, 0x9b, 0x9f, 0x6c, 0x8f, 0x47, 0x77,
	0x16, 0x6d, 0x72, 0x3f, 0x6f, 0x66, 0x79, 0xba, 0x48, 0x59, 0xfd, 0x3a, 0xcd, 0xed, 0x83, 0xcd,
	0x93, 0x69, 0x62, 0x9b, 0x1f, 0xf8, 0x99, 0x37, 0x66, 0xa4, 0xa6, 0x85, 0xf1, 0xdb, 0x38, 0xd0,
	0x81, 0x30, 0x80, 0x66, 0xa8, 0x81, 0xed, 0x93, 0x9d, 0x95, 0xb0, 0x2b, 0x62, 0x83, 0x5d, 0x75,
	0x16, 0x49, 0xea, 0xb0, 0x03, 0xb2, 0xbb, 0x82, 0x52, 0x99, 0x28, 0x1c, 0x7e, 0xb1, 0xfb, 0xa7,
	0xdb, 0x1b, 0x54, 0xdd, 0xb5, 0xc6, 0x29, 0xa9, 0x6b, 0xe1, 0x77, 0xc0, 0x60, 0x1b, 0x44, 0x80,
	0x4a, 0x1b, 0x54, 0x61, 0x18, 0x83, 0x61, 0x47, 0xe4, 0xf0, 0xb7, 0xc4, 0x22, 0x04, 0x94, 0x60,
	0x2e, 0x54, 0xbf, 0x83, 0x4a, 0x83, 0xa4, 0x4e, 0xe3, 0x96, 0x6c, 0xb4, 0x44, 0x0c, 0xe8, 0xf7,
	0x02, 0x56, 0x23, 0x5b, 0xdf, 0x37, 0x46, 0x32, 0x32, 0xd4, 0x61, 0x7b, 0xa4, 0x5e, 0x45, 0x7d,
	0xf0, 0x95, 0x94, 0xe0, 0x1b, 0xec, 0xc3, 0x39, 0x9d, 0xfc, 0x67, 0xb1, 0xa6, 0x96, 0xd5, 0xc8,
	0x66, 0x65, 0x20, 0x03, 0xfa, 0x28, 0x5b, 0xad, 0xe5, 0x0b, 0x77, 0x9e, 0x0a, 0xee, 0x2e, 0x0b,
	0xee, 0x3e, 0x17, 0xdc, 0x7d, 0x2d, 0xb8, 0xf3, 0x56, 0x70, 0xf7, 0xf2, 0xf8, 0xe7, 0x94, 0x57,
	0xe9, 0xdc, 0x9b, 0x4f, 0x27, 0xd9, 0x6c, 0xb4, 0xf0, 0xca, 0xcd, 0xcb, 0x59, 0xbd, 0x9b, 0xd4,
	0xcb, 0xc6, 0xe3, 0xf5, 0xf2, 0x39, 0x79, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x73, 0xb1, 0x98, 0x46,
	0x8e, 0x01, 0x00, 0x00,
}

func (x PATCH_UPDATE_TYPE) String() string {
	s, ok := PATCH_UPDATE_TYPE_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x PACKET_HEAD_OPT_OFFSET) String() string {
	s, ok := PACKET_HEAD_OPT_OFFSET_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x BASE_CMD) String() string {
	s, ok := BASE_CMD_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
